# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'mainwindow.ui'
#
# Created: Tue Jul 05 13:52:32 2016
#      by: PyQt4 UI code generator 4.10.3
#
# WARNING! All changes made in this file will be lost!

from PyQt4 import QtCore, QtGui

try:
    _fromUtf8 = QtCore.QString.fromUtf8
except AttributeError:
    def _fromUtf8(s):
        return s

try:
    _encoding = QtGui.QApplication.UnicodeUTF8
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig, _encoding)
except AttributeError:
    def _translate(context, text, disambig):
        return QtGui.QApplication.translate(context, text, disambig)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName(_fromUtf8("MainWindow"))
        MainWindow.resize(1110, 776)
        self.centralWidget = QtGui.QWidget(MainWindow)
        self.centralWidget.setObjectName(_fromUtf8("centralWidget"))
        self.groupBox = QtGui.QGroupBox(self.centralWidget)
        self.groupBox.setGeometry(QtCore.QRect(10, 10, 441, 731))
        self.groupBox.setObjectName(_fromUtf8("groupBox"))
        self.b_test_selectall = QtGui.QPushButton(self.groupBox)
        self.b_test_selectall.setGeometry(QtCore.QRect(10, 20, 121, 25))
        self.b_test_selectall.setObjectName(_fromUtf8("b_test_selectall"))
        self.b_test_selectnone = QtGui.QPushButton(self.groupBox)
        self.b_test_selectnone.setGeometry(QtCore.QRect(310, 20, 121, 25))
        self.b_test_selectnone.setObjectName(_fromUtf8("b_test_selectnone"))
        self.l_test_selectlst = QtGui.QListWidget(self.groupBox)
        self.l_test_selectlst.setGeometry(QtCore.QRect(10, 50, 421, 671))
        self.l_test_selectlst.setObjectName(_fromUtf8("l_test_selectlst"))
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Checked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        item = QtGui.QListWidgetItem()
        item.setCheckState(QtCore.Qt.Unchecked)
        self.l_test_selectlst.addItem(item)
        self.groupBox_2 = QtGui.QGroupBox(self.centralWidget)
        self.groupBox_2.setGeometry(QtCore.QRect(450, 10, 651, 61))
        self.groupBox_2.setObjectName(_fromUtf8("groupBox_2"))
        self.b_ctrl_start = QtGui.QPushButton(self.groupBox_2)
        self.b_ctrl_start.setGeometry(QtCore.QRect(10, 20, 141, 25))
        self.b_ctrl_start.setObjectName(_fromUtf8("b_ctrl_start"))
        self.b_ctrl_stop = QtGui.QPushButton(self.groupBox_2)
        self.b_ctrl_stop.setEnabled(False)
        self.b_ctrl_stop.setGeometry(QtCore.QRect(160, 20, 141, 25))
        self.b_ctrl_stop.setObjectName(_fromUtf8("b_ctrl_stop"))
        self.b_ctrl_savereport = QtGui.QPushButton(self.groupBox_2)
        self.b_ctrl_savereport.setGeometry(QtCore.QRect(310, 20, 171, 25))
        self.b_ctrl_savereport.setObjectName(_fromUtf8("b_ctrl_savereport"))
        self.pb_ctrl_test_progress = QtGui.QProgressBar(self.groupBox_2)
        self.pb_ctrl_test_progress.setGeometry(QtCore.QRect(520, 20, 118, 23))
        self.pb_ctrl_test_progress.setProperty("value", 100)
        self.pb_ctrl_test_progress.setObjectName(_fromUtf8("pb_ctrl_test_progress"))
        self.groupBox_3 = QtGui.QGroupBox(self.centralWidget)
        self.groupBox_3.setGeometry(QtCore.QRect(460, 80, 641, 461))
        self.groupBox_3.setObjectName(_fromUtf8("groupBox_3"))
        self.te_report = QtGui.QTextEdit(self.groupBox_3)
        self.te_report.setGeometry(QtCore.QRect(13, 24, 611, 421))
        self.te_report.setObjectName(_fromUtf8("te_report"))
        self.groupBox_4 = QtGui.QGroupBox(self.centralWidget)
        self.groupBox_4.setGeometry(QtCore.QRect(470, 550, 291, 191))
        self.groupBox_4.setObjectName(_fromUtf8("groupBox_4"))
        self.lineEdit = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit.setGeometry(QtCore.QRect(10, 50, 181, 31))
        self.lineEdit.setObjectName(_fromUtf8("lineEdit"))
        self.lineEdit_2 = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_2.setGeometry(QtCore.QRect(10, 80, 181, 31))
        self.lineEdit_2.setObjectName(_fromUtf8("lineEdit_2"))
        self.lineEdit_3 = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_3.setGeometry(QtCore.QRect(10, 110, 181, 31))
        self.lineEdit_3.setObjectName(_fromUtf8("lineEdit_3"))
        self.lineEdit_4 = QtGui.QLineEdit(self.groupBox_4)
        self.lineEdit_4.setGeometry(QtCore.QRect(10, 140, 181, 31))
        self.lineEdit_4.setObjectName(_fromUtf8("lineEdit_4"))
        self.label_2 = QtGui.QLabel(self.groupBox_4)
        self.label_2.setGeometry(QtCore.QRect(10, 30, 111, 16))
        self.label_2.setObjectName(_fromUtf8("label_2"))
        self.label_7 = QtGui.QLabel(self.groupBox_4)
        self.label_7.setGeometry(QtCore.QRect(200, 60, 91, 16))
        self.label_7.setObjectName(_fromUtf8("label_7"))
        self.label_8 = QtGui.QLabel(self.groupBox_4)
        self.label_8.setGeometry(QtCore.QRect(200, 150, 91, 16))
        self.label_8.setObjectName(_fromUtf8("label_8"))
        self.label_9 = QtGui.QLabel(self.groupBox_4)
        self.label_9.setGeometry(QtCore.QRect(200, 90, 91, 16))
        self.label_9.setObjectName(_fromUtf8("label_9"))
        self.label_10 = QtGui.QLabel(self.groupBox_4)
        self.label_10.setGeometry(QtCore.QRect(200, 120, 91, 16))
        self.label_10.setObjectName(_fromUtf8("label_10"))
        self.groupBox_5 = QtGui.QGroupBox(self.centralWidget)
        self.groupBox_5.setGeometry(QtCore.QRect(770, 550, 331, 191))
        self.groupBox_5.setObjectName(_fromUtf8("groupBox_5"))
        self.b_write_ipmi = QtGui.QPushButton(self.groupBox_5)
        self.b_write_ipmi.setGeometry(QtCore.QRect(20, 20, 91, 23))
        self.b_write_ipmi.setObjectName(_fromUtf8("b_write_ipmi"))
        self.ipmi_report = QtGui.QTextEdit(self.groupBox_5)
        self.ipmi_report.setGeometry(QtCore.QRect(13, 70, 301, 111))
        self.ipmi_report.setReadOnly(True)
        self.ipmi_report.setObjectName(_fromUtf8("ipmi_report"))
        self.f_quick_write_ipmi = QtGui.QCheckBox(self.groupBox_5)
        self.f_quick_write_ipmi.setGeometry(QtCore.QRect(30, 50, 111, 17))
        self.f_quick_write_ipmi.setObjectName(_fromUtf8("f_quick_write_ipmi"))
        self.f_quick_write_ipmi.setCheckState(QtCore.Qt.Unchecked)
        self.f_quick_write_ipmi.setEnabled( True )

        
        MainWindow.setCentralWidget(self.centralWidget)
        self.menuBar = QtGui.QMenuBar(MainWindow)
        self.menuBar.setGeometry(QtCore.QRect(0, 0, 1110, 21))
        self.menuBar.setObjectName(_fromUtf8("menuBar"))
        MainWindow.setMenuBar(self.menuBar)
        self.statusBar = QtGui.QStatusBar(MainWindow)
        self.statusBar.setObjectName(_fromUtf8("statusBar"))
        MainWindow.setStatusBar(self.statusBar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(_translate("MainWindow", "ТСОиК ВИМ-3U-3 программа тестирования ИЖДЯ.00009", None))
        self.groupBox.setTitle(_translate("MainWindow", "Наборы тестов", None))
        self.b_test_selectall.setText(_translate("MainWindow", "Выделить всё", None))
        self.b_test_selectnone.setText(_translate("MainWindow", "Снять выделение", None))
        __sortingEnabled = self.l_test_selectlst.isSortingEnabled()
        self.l_test_selectlst.setSortingEnabled(False)
        item = self.l_test_selectlst.item(0)
        item.setText(_translate("MainWindow", "Проверка загрузки U-boot", None))
        item = self.l_test_selectlst.item(1)
        item.setText(_translate("MainWindow", "Комплексный тест NOR1 и NOR2", None))
        item = self.l_test_selectlst.item(2)
        item.setText(_translate("MainWindow", "Запись Linux OS в NOR1", None))
        item = self.l_test_selectlst.item(3)
        item.setText(_translate("MainWindow", "Проверка сигнала перезагрузки", None))
        item = self.l_test_selectlst.item(4)
        item.setText(_translate("MainWindow", "Запуск Linux", None))
        item = self.l_test_selectlst.item(5)
        item.setText(_translate("MainWindow", "Проверка порта TRS", None))
        item = self.l_test_selectlst.item(6)
        item.setText(_translate("MainWindow", "Запись тестовых скриптов", None))
        item = self.l_test_selectlst.item(7)
        item.setText(_translate("MainWindow", "Проверка доступа к ПЛИС", None))
        item = self.l_test_selectlst.item(8)
        item.setText(_translate("MainWindow", "Проверка РПЗУ NAND", None))
        item = self.l_test_selectlst.item(9)
        item.setText(_translate("MainWindow", "Проверка ЭЗУ nvRAM №1", None))
        item = self.l_test_selectlst.item(10)
        item.setText(_translate("MainWindow", "Проверка ЭЗУ nvRAM №2", None))
        item = self.l_test_selectlst.item(11)
        item.setText(_translate("MainWindow", "Проверка РПЗУ I2C EEPROM", None))
        item = self.l_test_selectlst.item(12)
        item.setText(_translate("MainWindow", "Проверка I2C термодатчиков", None))
        item = self.l_test_selectlst.item(13)
        item.setText(_translate("MainWindow", "Проверка порта Ethernet (TEth)", None))
        item = self.l_test_selectlst.item(14)
        item.setText(_translate("MainWindow", "Проверка порта Ethernet AFDX1", None))
        item = self.l_test_selectlst.item(15)
        item.setText(_translate("MainWindow", "Проверка порта Ethernet AFDX2", None))
        item = self.l_test_selectlst.item(16)
        item.setText(_translate("MainWindow", "Проверка порта PCIe_VPX", None))
        item = self.l_test_selectlst.item(17)
        item.setText(_translate("MainWindow", "Проверка порта I2C_VPX", None))
        item = self.l_test_selectlst.item(18)
        item.setText(_translate("MainWindow", "Проверка порта PCIe_XMC", None))
        item = self.l_test_selectlst.item(19)
        item.setText(_translate("MainWindow", "Проверка порта I2C_XMC", None))
        item = self.l_test_selectlst.item(20)
        item.setText(_translate("MainWindow", "Проверка порта RS232C_1", None))
        item = self.l_test_selectlst.item(21)
        item.setText(_translate("MainWindow", "Проверка порта RS232C_2", None))
        item = self.l_test_selectlst.item(22)
        item.setText(_translate("MainWindow", "Проверка порта RS485", None))
        item = self.l_test_selectlst.item(23)
        item.setText(_translate("MainWindow", "Сигналы XMC, сквозные дифференциальные. Прохождение сигнала 125 МГц", None))
        item = self.l_test_selectlst.item(24)
        item.setText(_translate("MainWindow", "РК 0В/Обрыв. (DS(0)..DS(9)) Срабатывание", None))
        item = self.l_test_selectlst.item(25)
        item.setText(_translate("MainWindow", "РК 0В/Обрыв. (DS(15)..DS(22)). Срабатывание", None))
        item = self.l_test_selectlst.item(26)
        item.setText(_translate("MainWindow", "РК 27В/Обрыв. (DS(15)..DS(22)). Срабатывание", None))
        item = self.l_test_selectlst.item(27)
        item.setText(_translate("MainWindow", "РК 0В/Обрыв. Выходы.  Срабатывание", None))
        item = self.l_test_selectlst.item(28)
        item.setText(_translate("MainWindow", "РК 27В/Обрыв. Выходы.  Срабатывание", None))
        item = self.l_test_selectlst.item(29)
        item.setText(_translate("MainWindow", "РК Готовность. 0В/Обрыв. Срабатывание", None))
        item = self.l_test_selectlst.item(30)
        item.setText(_translate("MainWindow", "РК Низковольтные. Срабатывание", None))
        item = self.l_test_selectlst.item(31)
        item.setText(_translate("MainWindow", "Сигналы XMC, сквозные. Срабатывание", None))
        item = self.l_test_selectlst.item(32)
        item.setText(_translate("MainWindow", "Сигналы XMC, служебные. Срабатывание", None))
        item = self.l_test_selectlst.item(33)
        item.setText(_translate("MainWindow", "Сигналы VPX, однонаправленные. Срабатывание", None))
        item = self.l_test_selectlst.item(34)
        item.setText(_translate("MainWindow", "Сигналы VPX, двунаправленные, входы. Срабатывание", None))
        item = self.l_test_selectlst.item(35)
        item.setText(_translate("MainWindow", "Сигналы VPX, двунаправленные, выходы. Срабатывание", None))
        item = self.l_test_selectlst.item(36)
        item.setText(_translate("MainWindow", "Проверка метки времени", None))
        item = self.l_test_selectlst.item(37)
        item.setText(_translate("MainWindow", "РК 0В/Обрыв. L1 (DS(0)..DS(9),DS(15)..DS(22)) Проверка характеристик", None))
        item = self.l_test_selectlst.item(38)
        item.setText(_translate("MainWindow", "РК 0В/Обрыв. L0 (DS(0)..DS(9),DS(15)..DS(22)) Проверка характеристик", None))
        item = self.l_test_selectlst.item(39)
        item.setText(_translate("MainWindow", "РК 27В/Обрыв. L1 (DS(0)..DS(9),DS(15)..DS(22)) Проверка характеристик", None))
        item = self.l_test_selectlst.item(40)
        item.setText(_translate("MainWindow", "РК 27В/Обрыв. L0 (DS(0)..DS(9),DS(15)..DS(22)) Проверка характеристик", None))
        item = self.l_test_selectlst.item(41)
        item.setText(_translate("MainWindow", "РК 0В/Обрыв. L1 (DS(23),DS(24)) Проверка характеристик", None))
        item = self.l_test_selectlst.item(42)
        item.setText(_translate("MainWindow", "РК 0В/Обрыв. L0 (DS(23),DS(24)) Проверка характеристик", None))
        item = self.l_test_selectlst.item(43)
        item.setText(_translate("MainWindow", "РК 27В/Обрыв. L1 (DS(23),DS(24)) Проверка характеристик", None))
        item = self.l_test_selectlst.item(44)
        item.setText(_translate("MainWindow", "РК 27В/Обрыв. L0 (DS(23),DS(24)) Проверка характеристик", None))
        self.l_test_selectlst.setSortingEnabled(__sortingEnabled)
        self.groupBox_2.setTitle(_translate("MainWindow", "Управление", None))
        self.b_ctrl_start.setText(_translate("MainWindow", "Запустить тесты", None))
        self.b_ctrl_stop.setText(_translate("MainWindow", "Остановить", None))
        self.b_ctrl_savereport.setText(_translate("MainWindow", "Сохранить отчёт в файл", None))
        self.groupBox_3.setTitle(_translate("MainWindow", "Отчёт", None))
        self.te_report.setHtml(_translate("MainWindow", "<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.0//EN\" \"http://www.w3.org/TR/REC-html40/strict.dtd\">\n"
"<html><head><meta name=\"qrichtext\" content=\"1\" /><style type=\"text/css\">\n"
"p, li { white-space: pre-wrap; }\n"
"</style></head><body style=\" font-family:\'MS Shell Dlg 2\'; font-size:8.25pt; font-weight:400; font-style:normal;\">\n"
"<p style=\"-qt-paragraph-type:empty; margin-top:0px; margin-bottom:0px; margin-left:0px; margin-right:0px; -qt-block-indent:0; text-indent:0px; font-family:\'Averia Sans\'; font-size:9pt;\"><br /></p></body></html>", None))
        self.groupBox_4.setTitle(_translate("MainWindow", "IPMI информация", None))
        self.label_2.setText(_translate("MainWindow", "Ввод информации", None))
        self.label_7.setText(_translate("MainWindow", "Серийный номер", None))
        self.label_8.setText(_translate("MainWindow", "MAC-адрес 3", None))
        self.label_9.setText(_translate("MainWindow", "MAC-адрес 1", None))
        self.label_10.setText(_translate("MainWindow", "MAC-адрес 2", None))
        self.groupBox_5.setTitle(_translate("MainWindow", "Запись IPMI", None))
        self.b_write_ipmi.setText(_translate("MainWindow", "Записать IPMI", None))
        self.f_quick_write_ipmi.setText(_translate("MainWindow", "Вторичная запись", None))

